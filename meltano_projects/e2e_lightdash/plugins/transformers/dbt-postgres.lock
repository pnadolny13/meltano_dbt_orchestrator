{
  "plugin_type": "transformers",
  "name": "dbt-postgres",
  "namespace": "dbt_postgres",
  "docs": "https://docs.meltano.com/guide/transformation",
  "repo": "https://github.com/dbt-labs/dbt-core",
  "pip_url": "dbt-core~=1.0.0 dbt-postgres~=1.0.0",
  "executable": "dbt",
  "settings": [
    {
      "name": "project_dir",
      "value": "$MELTANO_PROJECT_ROOT/transform"
    },
    {
      "name": "profiles_dir",
      "env_aliases": [
        "DBT_PROFILES_DIR"
      ],
      "value": "$MELTANO_PROJECT_ROOT/transform/profiles/postgres"
    },
    {
      "name": "host",
      "kind": "string",
      "description": "The postgres host to connect to.\n"
    },
    {
      "name": "user",
      "kind": "string",
      "description": "The user to connect as.\n"
    },
    {
      "name": "password",
      "kind": "password",
      "description": "The password to connect with.\n"
    },
    {
      "name": "port",
      "kind": "integer",
      "description": "The port to connect to.\n"
    },
    {
      "name": "dbname",
      "kind": "string",
      "description": "The db to connect to.\n",
      "alias": "database"
    },
    {
      "name": "schema",
      "kind": "string",
      "description": "The schema to use.\n"
    },
    {
      "name": "keepalives_idle",
      "kind": "integer",
      "description": "Seconds between TCP keepalive packets.\n"
    },
    {
      "name": "search_path",
      "kind": "string",
      "description": "Overrides the default search path.\n"
    },
    {
      "name": "role",
      "kind": "string",
      "description": "Role for dbt to assume when executing queries.\n"
    },
    {
      "name": "sslmode",
      "description": "sslmode used to connect to the database.\n",
      "type": "array"
    }
  ],
  "commands": {
    "clean": {
      "args": "clean",
      "description": "Delete all folders in the clean-targets list (usually the dbt_modules and target directories.)"
    },
    "compile": {
      "args": "compile",
      "description": "Generates executable SQL from source model, test, and analysis files. Compiled SQL files are written to the target/ directory."
    },
    "deps": {
      "args": "deps",
      "description": "Pull the most recent version of the dependencies listed in packages.yml"
    },
    "run": {
      "args": "run",
      "description": "Compile SQL and execute against the current target database."
    },
    "seed": {
      "args": "seed",
      "description": "Load data from csv files into your data warehouse."
    },
    "snapshot": {
      "args": "snapshot",
      "description": "Execute snapshots defined in your project."
    },
    "test": {
      "args": "test",
      "description": "Runs tests on data in deployed models."
    }
  }
}